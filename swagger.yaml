openapi: 3.0.0
info:
  version: 1.0.0
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
servers:
  - url: localhost:3001/api/v1
    description: server
paths:
  /user/accounts/{accountNumber}/transactions/{transactionId}:
    put:
      summary: Update a transaction
      tags:
        - Transaction Module
      description: Update transaction details
      security:
        - JWT: []
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
          description: ID of the transaction to update
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: Bad request
        "403":
          description: Unauthorized
        "404":
          description: Transaction not found
    get:
      tags:
        - Transaction Module
      description: Retrieve a single transaction's data
      summary: Retrieve a single transaction's data
      security:
        - JWT: []
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
          description: ID of the transaction to update
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amount:
                    type: number
                    format: double
                  type:
                    type: string
                  description:
                    type: string
              example:
                id: "UIDeE23XFDEEvEDF"
                amount: 120.0
                type: "debit"
                description: "Online purchase"
        400:
          description: Bad Request
        403:
          description: Unauthaurized
        404:
          description: Transaction not found
  /user/accounts:
    get:
      tags:
        - Account Module
      summary: Retrieve user accounts
      security:
        - JWT: []
      responses:
        "200":
          description: User accounts retrieved successully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
              example:
                - id: "fRDEEE232DRE"
                  type: "Electronic"
                  balance: 500.00
                  transactions:
                    - id: "UIDeE23XFDEEvEDF"
                      amount: 120.0
                      type: "debit"
                      description: "Online purchase"
                    - id: "FDSLEZde322VD"
                      amount: 300.0
                      type: "debit"
                      description: "Grocery shopping"
                    - id: "DSEEE432ERD"
                      amount: 50.0
                      type: "credit"
                      description: "Refund"
                - id: "ABC123XYZ"
                  type: "Savings"
                  balance: 2500.00
                  transactions:
                    - id: "KLM789JKL"
                      amount: 200.0
                      type: "debit"
                      description: "Withdrawal"
                    - id: "PQR456MNO"
                      amount: 500.0
                      type: "debit"
                      description: "Vacation booking"
                    - id: "STU123VWX"
                      amount: 1000.0
                      type: "credit"
                      description: "Salary deposit"
                    - id: "YZA345BCD"
                      amount: 300.0
                      type: "debit"
                      description: "Electronics purchase"
                - id: "ZYX987WVU"
                  type: "Checking"
                  balance: 1200.00
                  transactions:
                    - id: "QWE567RTY"
                      amount: 80.0
                      type: "debit"
                      description: "Dinner with friends"
                    - id: "ASD123FGH"
                      amount: 150.0
                      type: "debit"
                      description: "Clothing shopping"

        "400":
          description: Bad request
        "403":
          description: Unauthorized
        "404":
          description: Account not found
  /user/accounts/{accountNumber}:
    get:
      tags:
        - Account Module
      summary: Retrieve account details
      security:
        - JWT: []
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
          description: ID of the account to retrieve
      responses:
        "200":
          description: Retrieval successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
              examples:
                example:
                  value:
                    id: "123456"
                    type: "savings"
                    balances: 1000.00
                    owner: "John Doe"
                    transactions:
                      - id: "UIDeE23XFDEEvEDF"
                        amount: 120.0
                        description: "OC payment"
                      - id: "FDSLEZde322VD"
                        amount: 400
                        description: "gas tank"
        "404":
          description: Account not found
        "403":
          description: Unauthorized
  /user/accounts/{accountNumber}/transactions:
    get:
      tags:
        - Transaction Module
      summary: Retrieve retrieve all the transactions linked to an account
      security:
        - JWT: []
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
          description: ID of the account where all the transactions
      responses:
        "200":
          description: Retrieval successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
              example:
                - id: "UIDeE23XFDEEvEDF"
                  amount: 120.0
                  description: "OC payment"
                - id: "FDSLEZde322VD"
                  amount: 400
                  description: "gas tank"
        "404":
          description: Account not found
        "403":
          description: Unauthorized
  /user/login:
    post:
      tags:
        - User Module
      summary: Login endpoint
      description: Login endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user email
                password:
                  type: string
                  description: user password
            example:
              email: "johndoe@gmail.com"
              password: "johndoePWD@!"
      responses:
        "200":
          description: Successfully Logged in
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user email
                password:
                  type: string
                  description: user password
                lastName:
                  type: string
                  description: user lastName
                userName:
                  type: string
                  description: user Username
                firstName:
                  type: string
                  description: user Firstname
            example:
              email: "johndoe@gmail.com"
              password: "johndoePWD@!"
              firstName: "John"
              lastName: "Doe"
              userName: "WarrenBuffet2.0"
      responses:
        "200":
          description: Signup Successfull
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - JWT: []
      tags:
        - User Module
      summary: Fetch user profile
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successully
        "400":
          description: Invalid Fields
        "403":
          description: Unauthorized
        "500":
          description: Internal Server Error
    put:
      security:
        - JWT: []
      tags:
        - User Module
      summary: Update user profile
      description: API for updating a user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: user email
            example:
              username: "JohnDoeNewUserName"
      responses:
        "200":
          description: User profile updated successully
        "400":
          description: Invalid Fields
        "403":
          description: Unauthorized
        "500":
          description: Internal Server Error
security:
  - JWT: []
components:
  securitySchemes:
    JWT:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          description: Transaction ID
        amount:
          type: number
          format: double
          description: Transaction amount
        type:
          type: string
          description: Type of transaction
        category:
          type: string
          description: Optional custom type from the user
        Note:
          type: string
          description: Optional note from the user
        description:
          type: string
          description: Transaction description
      required:
        - type
        - id
        - amount
    Account:
      properties:
        id:
          type: string
          description: Account Id
        type:
          type: string
          description: Account type (checking, savings, MMA...)
        balance:
          type: number
          description: Account available funds
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
          description: list of all the transaction linked to the account
      required:
        - type
        - id
        - balance
