swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/accounts/{accountNumber}/transactions:
    get:
      tags:
        - Transaction Module
      summary: Retrieve all the transactions linked to the specified account
      parameters:
        - name: accountNumber
          type: string
          in: path
          required: true
          description: The account number to retrieve
          # schema:
      responses:
        "200":
          description: Successful response
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction info
      parameters:
        - name: transactionId
          type: string
          in: path
          required: true
          description: ID of the transaction
        - name: accountNumber
          type: string
          in: path
          required: true
          description: ID of the account
      responses:
        "200":
          description: Transaction succesfully modified
  /user/accounts:
    get:
      tags:
        - Account Module
      summary: Retrieve user accounts
      responses:
        "200":
          description: User accounts retrieved successully
          schema:
            $ref: "#/definitions/Account"
  /user/accounts/{accountNumber}:
    get:
      tags:
        - Account Module
      summary: Retrieve account details
      parameters:
        - name: accountNumber
          type: string
          in: path
          required: true
          description: The account number to retrieve
      produces:
        - application/json
      responses:
        "200":
          description: Retrieval successful
          schema:
            $ref: "#/definitions/Account"

  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Transaction:
    properties:
      date:
        type: string
        description: Date of the transaction
      transactionType:
        type: string
        description: Type of the transaction
      transactionCategory:
        type: string
        description: Category of the transaction
      transactionId:
        type: string
        description: Transaction Id
      transactionAmount:
        type: number
        description: Amount of the transaction
      creditorId:
        type: string
        description: Creditor's bank account id
      debtorId:
        type: string
        description: Debtor's bank account id
      note:
        type: string
        description: Optional note regarding the transaction
      newBalance:
        type: number
        description: Account's new balance
  Account:
    properties:
      accountType:
        type: string
        description: Account type (checking, savings, MMA...)
      availableFunds:
        type: number
        description: Account available funds
      transactions:
        type: array
        description: list of all the transaction linked to the account
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
